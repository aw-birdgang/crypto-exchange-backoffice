services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: crypto-exchange-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: crypto_exchange
      MYSQL_USER: crypto_user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "crypto_user", "-ppassword"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s
    networks:
      - crypto-exchange-network

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: crypto-exchange-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crypto-exchange-network

  # API Server
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypto-exchange-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: crypto_user
      DB_PASSWORD: password
      DB_DATABASE: crypto_exchange
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - /app/node_modules
    networks:
      - crypto-exchange-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  crypto-exchange-network:
    driver: bridge
