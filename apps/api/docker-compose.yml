services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: crypto-exchange-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: crypto_exchange
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - crypto-exchange-network

  # Redis (for caching and session management)
  redis:
    image: redis:7-alpine
    container_name: crypto-exchange-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crypto-exchange-network

  # API Server
  api:
    build:
      context: ../../
      dockerfile: apps/api/Dockerfile
    container_name: crypto-exchange-api
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: crypto_exchange
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      PORT: 3001
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - redis
    volumes:
      - /app/node_modules
    networks:
      - crypto-exchange-network


volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  crypto-exchange-network:
    driver: bridge
