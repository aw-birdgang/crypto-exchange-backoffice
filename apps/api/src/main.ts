import { NestFactory } from '@nestjs/core';
import { ValidationPipe } from '@nestjs/common';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';
import { AppModule } from './app.module';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  // Global validation pipe
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true,
      forbidNonWhitelisted: true,
      transform: true,
    }),
  );

  // CORS ÏÑ§Ï†ï
  app.enableCors({
    origin: process.env.FRONTEND_URL || 'http://localhost:3000',
    credentials: true,
  });

  // Swagger ÏÑ§Ï†ï
  const config = new DocumentBuilder()
    .setTitle('Crypto Exchange API')
    .setDescription(`
      ÏïîÌò∏ÌôîÌèê Í±∞ÎûòÏÜå Î∞±Ïò§ÌîºÏä§ API Î¨∏ÏÑú
      
      ## Ïù∏Ï¶ù Î∞©Î≤ï
      1. Î°úÍ∑∏Ïù∏ APIÎ•º ÌÜµÌï¥ JWT ÌÜ†ÌÅ∞ÏùÑ Î∞õÏäµÎãàÎã§
      2. ÏÉÅÎã®Ïùò "Authorize" Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠Ìï©ÎãàÎã§
      3. "Bearer {your-token}" ÌòïÏãùÏúºÎ°ú ÌÜ†ÌÅ∞ÏùÑ ÏûÖÎ†•Ìï©ÎãàÎã§
      
      ## ÌÖåÏä§Ìä∏ Î∞©Î≤ï
      - Í∞Å APIÏùò "Try it out" Î≤ÑÌäºÏùÑ ÌÅ¥Î¶≠ÌïòÏó¨ ÌÖåÏä§Ìä∏Ìï† Ïàò ÏûàÏäµÎãàÎã§
      - Ïù∏Ï¶ùÏù¥ ÌïÑÏöîÌïú APIÎäî Î®ºÏ†Ä Î°úÍ∑∏Ïù∏ÌïòÏó¨ ÌÜ†ÌÅ∞ÏùÑ Î∞õÏïÑÏ£ºÏÑ∏Ïöî
    `)
    .setVersion('1.0.0')
    .setContact('Crypto Exchange Team', 'https://crypto-exchange.com', 'support@crypto-exchange.com')
    .setLicense('MIT', 'https://opensource.org/licenses/MIT')
    .addServer('http://localhost:3001', 'Development Server')
    .addServer('https://api.crypto-exchange.com', 'Production Server')
    .addBearerAuth(
      {
        type: 'http',
        scheme: 'bearer',
        bearerFormat: 'JWT',
        name: 'Authorization',
        description: 'Enter JWT token (Bearer {token})',
        in: 'header',
      },
      'JWT-auth', // This name here is important for matching up with @ApiBearerAuth() in your controller!
    )
    .addTag('Authentication', 'ÏÇ¨Ïö©Ïûê Ïù∏Ï¶ù Í¥ÄÎ†® API')
    .addTag('Permissions', 'Í∂åÌïú Î∞è Ïó≠Ìï† Í¥ÄÎ¶¨ API')
    .addTag('Admin', 'Í¥ÄÎ¶¨Ïûê Ï†ÑÏö© API')
    .build();

  const document = SwaggerModule.createDocument(app, config, {
    operationIdFactory: (controllerKey: string, methodKey: string) => methodKey,
  });

  SwaggerModule.setup('api-docs', app, document, {
    swaggerOptions: {
      persistAuthorization: true,
      displayRequestDuration: true,
      filter: true,
      showExtensions: true,
      showCommonExtensions: true,
      docExpansion: 'none',
      defaultModelsExpandDepth: 2,
      defaultModelExpandDepth: 2,
    },
    customSiteTitle: 'Crypto Exchange API Documentation',
    customfavIcon: '/favicon.ico',
    customCss: `
      .swagger-ui .topbar { display: none }
      .swagger-ui .info .title { color: #3b82f6; }
      .swagger-ui .scheme-container { background: #f8fafc; padding: 20px; border-radius: 8px; }
    `,
  });

  const port = process.env.PORT || 3001;
  await app.listen(port);

  console.log(`üöÄ API Server is running on: http://localhost:${port}`);
  console.log(`üìö API Documentation: http://localhost:${port}/api-docs`);
  console.log(`üîê Test Authentication: POST http://localhost:${port}/auth/login`);
}

bootstrap();
