services:
  # MySQL Database for Production
  mysql:
    image: mysql:8.0
    container_name: crypto-exchange-db-prod
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-prod_root_password_123}
      MYSQL_DATABASE: crypto_exchange_prod
      MYSQL_USER: ${MYSQL_USER:-crypto_user_prod}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-prod_password_123}
    ports:
      - "3308:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER:-crypto_user_prod}", "-p${MYSQL_PASSWORD:-prod_password_123}"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s
    networks:
      - crypto-exchange-prod-network

  # Redis for Production
  redis:
    image: redis:7-alpine
    container_name: crypto-exchange-redis-prod
    restart: unless-stopped
    ports:
      - "6381:6379"
    volumes:
      - redis_data_prod:/data
    command: redis-server --requirepass ${REDIS_PASSWORD:-prod_redis_password_123}
    networks:
      - crypto-exchange-prod-network

  # API Server for Production
  api:
    build:
      context: .
      dockerfile: Dockerfile.api.production
      args:
        NODE_ENV: production
    container_name: crypto-exchange-api-prod
    restart: unless-stopped
    env_file:
      - config/environments/production.env
    environment:
      NODE_ENV: production
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: ${MYSQL_USER:-crypto_user_prod}
      DB_PASSWORD: ${MYSQL_PASSWORD:-prod_password_123}
      DB_DATABASE: crypto_exchange_prod
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-prod_redis_password_123}
      JWT_SECRET: ${JWT_SECRET:-prod_jwt_secret_key_change_in_production_123456789}
      JWT_EXPIRES_IN: 1h
      PORT: 3001
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3020}
      VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:3004}
      # Swagger 환경별 서버 URL 설정
      DEV_SERVER_URL: http://localhost:3001
      STAGING_SERVER_URL: http://localhost:3002
      PROD_SERVER_URL: http://localhost:3004
    ports:
      - "3004:3001"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - /app/node_modules
    networks:
      - crypto-exchange-prod-network

volumes:
  mysql_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  crypto-exchange-prod-network:
    driver: bridge
